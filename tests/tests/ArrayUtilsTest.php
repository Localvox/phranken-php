<?php
namespace MarketMeSuite\Phranken\Util;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-08-24 at 03:47:34.
 */
class ArrayUtilsTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var ArrayUtils
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new ArrayUtils;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers MarketMeSuite\Phranken\Util\ArrayUtils::BuildJoinedArray
     */
    public function testBuildJoinedArray()
    {
        $actual = ArrayUtils::buildJoinedArray(
            array(
                array('apples', 'oranges'),
                array('pears', 'bananas')
            ),
            ','
        );

        $expected = array (
            0 => 'apples,oranges',
            1 => 'pears,bananas',
        );

        $this->assertEquals($expected, $actual);
    }

    /**
     * @covers MarketMeSuite\Phranken\Util\ArrayUtils::ConstructFieldArray
     */
    public function testConstructFieldArray()
    {
        $actual = ArrayUtils::constructFieldArray(
            array(
                array('id' => 'apples'),
                array('id' => 'oranges'),
                array('id' => 'pears'),
                array('id' => 'bananas')
            ),
            'id'
        );

        $expected = array (
            0 => 'apples',
            1 => 'oranges',
            2 => 'pears',
            3 => 'bananas',
        );

        $this->assertEquals($expected, $actual);


        // empty array
        $actual = ArrayUtils::constructFieldArray(
            array(),
            'id'
        );

        $expected = false;

        $this->assertEquals($expected, $actual);

        // empty field
        $actual = ArrayUtils::constructFieldArray(
            array('id'),
            ''
        );

        $expected = false;

        $this->assertEquals($expected, $actual);
    }

    /**
     * @covers MarketMeSuite\Phranken\Util\ArrayUtils::FlattenArray
     */
    public function testFlattenArray()
    {
        $expected = array (
            0 => 'apples',
            1 => 'oranges',
            2 => 'pears',
            3 => 'bananas',
        );

        $actual = ArrayUtils::flattenArray(
            array(
                array('id' => 'apples'),
                array('id' => 'oranges'),
                array('id' => 'pears'),
                array('id' => 'bananas')
            ),
            'id'
        );

        $this->assertEquals($expected, $actual);
    }
}
