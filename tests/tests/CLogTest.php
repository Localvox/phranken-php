<?php
namespace MarketMeSuite\Phranken\Commandline;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-08-24 at 03:47:33.
 */
class CLogTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var CLog
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new CLog('test');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers MarketMeSuite\Phranken\Commandline\CLog::__construct
     */
    public function testConstruct()
    {
        $clog = new CLog('test');

        $this->assertInternalType('array', $clog->getColors());
        $this->assertInternalType('array', $clog->getColorMap());
    }

    /**
     * @covers MarketMeSuite\Phranken\Commandline\CLog::log
     */
    public function testLog()
    {
        $time = 1387590509;

        $stub = $this->getMock('MarketMeSuite\Phranken\Commandline\CLog', array('getTime'));
        $stub->expects($this->any())
            ->method('getTime')
            ->will($this->returnValue($time));

        // ensure a blank color map
        $stub->setColorMap(array());

        $expected = "Sat Dec 21 01:48:29 [info] message \n";

        // capture actual
        ob_start();
        $stub->log('message');
        $actual = ob_get_clean();

        $this->assertSame(
            $expected,
            $actual
        );


        // test different status message
        $expected = "Sat Dec 21 01:48:29 [fatal] message \n";

        // capture actual
        ob_start();
        $stub->log('message', CLog::C_FATAL);
        $actual = ob_get_clean();

        $this->assertSame(
            $expected,
            $actual
        );

        // test detail output
        $expected = "Sat Dec 21 01:48:29 [fatal] message \n" .
            "array(1) {\n" .
            "  'detail' =>\n" .
            "  string(12) \"some details\"\n" .
            "}\n\n";

        // capture actual
        ob_start();
        $stub->log('message', CLog::C_FATAL, array('detail' => 'some details'));
        $actual = ob_get_clean();

        $this->assertSame(
            $expected,
            $actual
        );
    }

    /**
     * @covers MarketMeSuite\Phranken\Commandline\CLog::out
     */
    public function testOut()
    {
        // make protected method accessible for testing
        $method = new \ReflectionMethod(
            'MarketMeSuite\Phranken\Commandline\CLog',
            'out'
        );

        $method->setAccessible(true);

        // test output
        $expected = 'message';

        // capture actual
        ob_start();
        $method->invoke($this->object, $expected);
        $actual = ob_get_clean();

        $this->assertEquals(
            $expected,
            $actual
        );

        // test output suppression
        $this->object->suppressOutput(true);
        $expected = false;

        // capture actual
        ob_start();
        $method->invoke($this->object, 'message');
        $actual = ob_get_clean();

        $this->assertEquals(
            $expected,
            $actual
        );
    }

    /**
     * @covers MarketMeSuite\Phranken\Commandline\CLog::wrapInColor
     * @todo   Implement testWrapInColor().
     */
    public function testWrapInColor()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MarketMeSuite\Phranken\Commandline\CLog::applyColorMap
     * @todo   Implement testApplyColorMap().
     */
    public function testApplyColorMap()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MarketMeSuite\Phranken\Commandline\CLog::getColors
     * @todo   Implement testGetColors().
     */
    public function testGetColors()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MarketMeSuite\Phranken\Commandline\CLog::setColors
     * @todo   Implement testSetColors().
     */
    public function testSetColors()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MarketMeSuite\Phranken\Commandline\CLog::getColorMap
     * @todo   Implement testGetColorMap().
     */
    public function testGetColorMap()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MarketMeSuite\Phranken\Commandline\CLog::setColorMap
     * @todo   Implement testSetColorMap().
     */
    public function testSetColorMap()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MarketMeSuite\Phranken\Commandline\CLog::suppressOutput
     * @todo   Implement testSuppressOutput().
     */
    public function testSuppressOutput()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}
