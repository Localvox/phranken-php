<?php
namespace MarketMeSuite\Phranken\Commandline;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-08-24 at 03:47:33.
 */
class ArgUtilsTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var ArgUtils
     */
    protected $object;

    protected $testArgs = null;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new ArgUtils;

        $this->testArgs = array(
            'scriptname.php',
            '--key',
            '--value',
            '-host',
            '127.0.0.1',
            '-port',
            '8000',
            'nopair'
        );
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers MarketMeSuite\Phranken\Commandline\ArgUtils::getArgPair
     */
    public function testGetArgPair()
    {
        $this->assertEquals(
            array('-host' => $this->testArgs[4]),
            ArgUtils::getArgPair($this->testArgs, '-host')
        );
        
        $this->assertEquals(
            array('-port' => $this->testArgs[6]),
            ArgUtils::getArgPair($this->testArgs, '-port')
        );
    }

    /**
     * @covers MarketMeSuite\Phranken\Commandline\ArgUtils::getArgPair
     */
    public function testGetArgPair2()
    {
        $this->assertEquals(
            array('nopair' => null),
            ArgUtils::getArgPair($this->testArgs, 'nopair', null)
        );

        $this->assertEquals(
            array('nopair' => null),
            ArgUtils::getArgPair($this->testArgs, 'nopair', null)
        );
    }

    /**
     * @covers MarketMeSuite\Phranken\Commandline\ArgUtils::getArgPair
     */
    public function testGetArgPair3()
    {
        $this->assertEquals(
            array(),
            ArgUtils::getArgPair($this->testArgs, 'does_not_exist'),
            'missing argument results in blank array'
        );

        $this->assertEquals(
            array(),
            ArgUtils::getArgPair($this->testArgs, 'does_not_exist', 'foo'),
            'default value not applied to missing argument'
        );

        $this->assertEquals(
            array('does_not_exist' => 'foo'),
            ArgUtils::getArgPair($this->testArgs, 'does_not_exist', 'foo', true),
            'allowing a missing argument to use a default value'
        );

        $this->assertEquals(
            array('--key' => null),
            ArgUtils::getArgPair($this->testArgs, '--key'),
            'allowing a missing value to use default value'
        );
    }

    /**
     * @covers MarketMeSuite\Phranken\Commandline\ArgUtils::argExists
     */
    public function testArgExists()
    {
        $this->assertEquals(
            false,
            ArgUtils::argExists($this->testArgs, 'does_not_exist'),
            'should return false if the argument was not found'
        );

        $this->assertEquals(
            true,
            ArgUtils::argExists($this->testArgs, '-host'),
            'should return true if the argument was found'
        );
    }
}
